version: 2
jobs:
  py3:
    docker:
      - image: python:3.6-alpine

    working_directory: ~/flask-dynamo-session
    parallelism: 1
    steps:
      - checkout

      - run:
          name: "Install dependencies from alpine pkgs"
          command: |
            set -e
            set -x
            apk add --update ca-certificates git gzip python3 tar
            update-ca-certificates

      - restore-cache:
          keys:
            - v1-py3-{{ checksum "Pipfile.lock" }}
            - v1-py3-

      - run:
          name: "Python dependencies, tests, and build"
          environment:
            PIPENV_NOSPIN: True
            CI_TEST_REPORTS: /tmp/ci_reports/
            PYTHON_VERSION: 3
          command: |
            set -e
            scripts/pipenv-update
            scripts/pytest
            scripts/build

      - run:
          name: "Python release"
          command: |
            set -e
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              scripts/release
            fi

      - save-cache:
          key: v1-py3-{{ checksum "Pipfile.lock" }}-{{ epoch }}
          paths:
            - ~/.cache/pip

      - store_test_results:
          path: /tmp/ci_reports

      - store_artifacts:
          path: ./dist/
          destination: py3

      - persist_to_workspace:
          root: ./dist/
          paths:
            - ./

  py2:
    docker:
      - image: python:2.7-alpine

    working_directory: ~/flask-dynamo-session
    parallelism: 1
    steps:
      - checkout

      - run:
          name: "Install dependencies from alpine pkgs"
          command: |
            set -e
            set -x
            apk add --update ca-certificates git gzip python3 tar
            update-ca-certificates

      - restore-cache:
          keys:
            - v1-py2-{{ checksum "Pipfile.lock" }}
            - v1-py2-

      - run:
          name: "Python dependencies, tests, and build"
          environment:
            PIPENV_NOSPIN: True
            CI_TEST_REPORTS: /tmp/ci_reports/
            PYTHON_VERSION: 2
          command: |
            set -e
            scripts/pipenv-update --two
            scripts/pytest
            scripts/build

      - run:
          name: "Python release"
          command: |
            set -e
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              scripts/release
            fi

      - save-cache:
          key: v1-py2-{{ checksum "Pipfile.lock" }}-{{ epoch }}
          paths:
            - ~/.cache/pip

      - store_test_results:
          path: /tmp/ci_reports

      - store_artifacts:
          path: ./dist/
          destination: py2

      - persist_to_workspace:
          root: ./dist/
          paths:
            - ./

  gh_release:
    docker:
      - image: golang:alpine
    working_directory: ~/flask-dynamo-session
    parallelism: 1
    steps:
      - checkout

      - run:
          name: "Install dependencies from alpine pkgs"
          command: |
            set -e
            set -x
            apk add --update ca-certificates git gzip tar
            update-ca-certificates
            go get github.com/tcnksm/ghr

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: "Upload GitHub Release"
          command: |
            version=$(awk -F '"' '/^__version__/ {print $2}' flask_dynamo_session/__version__.py)
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME $version /tmp/workspace || true
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -recreate -prerelease master /tmp/workspace

workflows:
  version: 2
  test:
    jobs:
      - py3
      - py2
      - gh_release:
          requires:
            - py3
            - py2
          filters:
            branches:
              only: master
